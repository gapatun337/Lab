import tkinter as tk
from tkinter import messagebox
from scipy.optimize import linprog






class OptimizationApp:
    def __init__(self, master):
        self.master = master
        master.title("Оптимизационная задача")

        self.variables_count = 4  # Количество переменных задается здесь
        
        # Инициализация элементов интерфейса
        self.entries = {
            'coefficients': [],
            'constraints': [[] for _ in range(self.variables_count)],
            'bounds': []
        }

        # Ввод коэффициентов целевой функции
        tk.Label(master, text="Коэффициенты целевой функции:").grid(row=0, column=0, columnspan=4)
        for i in range(self.variables_count):
            entry = tk.Entry(master, width=5)
            entry.grid(row=1, column=i)
            self.entries['coefficients'].append(entry)

        # Ввод коэффициентов ограничений
        tk.Label(master, text="Коэффициенты ограничений (строки) и границы (0.., 1..or ..1):").grid(row=2, column=0, columnspan=4)
        for i in range(self.variables_count):
            for j in range(self.variables_count + 1):  # переменные плюс правая сторона
                entry = tk.Entry(master, width=5)
                entry.grid(row=3+i, column=j)
                self.entries['constraints'][i].append(entry)
                
            # Границы переменных
        tk.Label(master, text="Нижняя и верхняя границы переменных:").grid(row=7, column=0, columnspan=4)
        for i in range(self.variables_count):
            bound_frame = tk.Frame(master)
            bound_frame.grid(row=8+i, column=0, columnspan=2)
            lower_bound = tk.Entry(bound_frame, width=5)
            lower_bound.pack(side=tk.LEFT)
            upper_bound = tk.Entry(bound_frame, width=5)
            upper_bound.pack(side=tk.RIGHT)
            self.entries['bounds'].append((lower_bound, upper_bound))

        # Кнопка расчета
        tk.Button(master, text="Рассчитать", command=self.calculate).grid(row=12, column=0, columnspan=4)

    def calculate(self):
        try:
            c = [float(entry.get()) for entry in self.entries['coefficients']]
            A = [[float(entry.get()) for entry in row[:-1]] for row in self.entries['constraints']]
            b = [float(row[-1].get()) for row in self.entries['constraints']]
            bounds = [(float(bound[0].get()), float(bound[1].get())) for bound in self.entries['bounds']]
            
            res = linprog(c, A_ub=A, b_ub=b, bounds=bounds)
            messagebox.showinfo("Результат", f"Оптимальное значение целевой функции: {res.fun}\nС переменными: {res.x}")
        except Exception as e:
            messagebox.showerror("Ошибка", str(e))

root = tk.Tk()
app = OptimizationApp(root)
root.mainloop()
