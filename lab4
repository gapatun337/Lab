import numpy as np
import matplotlib.pyplot as plt
import tkinter as tk

def get_user_input_points(num_points):
    x_points = []
    y_points = []
    
    for i in range(num_points):
        x = float(entry_points_x[i].get())
        y = float(entry_points_y[i].get())
        x_points.append(x)
        y_points.append(y)
    
    return x_points, y_points

def is_point_inside_polygon(x_polygon, y_polygon, x, y):
    n = len(x_polygon)
    inside = False

    p1x, p1y = x_polygon[0], y_polygon[0]
    for i in range(n+1):
        p2x, p2y = x_polygon[i % n], y_polygon[i % n]
        if y > min(p1y, p2y):
            if y <= max(p1y, p2y):
                if x <= max(p1x, p2x):
                    if p1y != p2y:
                        xinters = (y-p1y)*(p2x-p1x)/(p2y-p1y)+p1x
                        if p1x == p2x or x <= xinters:
                            inside = not inside
        p1x, p1y = p2x, p2y

    return inside

def plot_figure_and_point(x_polygon, y_polygon, user_x, user_y):
    fig, ax = plt.subplots()
    
    # Фигура
    ax.plot(x_polygon + [x_polygon[0]], y_polygon + [y_polygon[0]], color='blue')  # Замыкаем фигуру
    
    # Точка пользователя
    is_inside = is_point_inside_polygon(x_polygon, y_polygon, user_x, user_y)
    
    if is_inside:
        ax.scatter(user_x, user_y, color='green', label="Точка внутри фигуры")
    else:
        ax.scatter(user_x, user_y, color='red', label="Точка вне фигуры")
    
    if is_inside:
        plt.title("Точка находится внутри фигуры", fontsize=12)
    else:
        plt.title("Точка не попадает в фигуру", fontsize=12)
    
    plt.grid(True)
    plt.xlabel("x", fontsize=10)
    plt.ylabel("y", fontsize=10)
    plt.legend()
    plt.show()

def on_submit():
    num_points = int(entry_num_points.get())
    x_polygon, y_polygon = get_user_input_points(num_points)
    user_x = float(entry_user_x.get())
    user_y = float(entry_user_y.get())
    plot_figure_and_point(x_polygon, y_polygon, user_x, user_y)

# Создание графического пользовательского интерфейса
root = tk.Tk()
root.title("Проверка точки внутри фигуры")

label_num_points = tk.Label(root, text="Введите количество точек для фигуры:")
label_num_points.pack()

entry_num_points = tk.Entry(root)
entry_num_points.pack()

def add_point_fields():
    num_points = int(entry_num_points.get())
    global entry_points_x, entry_points_y
    entry_points_x = []
    entry_points_y = []
    
    for i in range(num_points):
        label_x = tk.Label(root, text=f"x{i + 1}:")
        label_x.pack()
        
        entry_x = tk.Entry(root)
        entry_x.pack()
        entry_points_x.append(entry_x)
        
        label_y = tk.Label(root, text=f"y{i + 1}:")
        label_y.pack()
        
        entry_y = tk.Entry(root)
        entry_y.pack()
        entry_points_y.append(entry_y)
    
add_point_button = tk.Button(root, text="Добавить поля для точек", command=add_point_fields)
add_point_button.pack()

label_user_x = tk.Label(root, text="x точки пользователя:")
label_user_x.pack()

entry_user_x = tk.Entry(root)
entry_user_x.pack()

label_user_y = tk.Label(root, text="y точки пользователя:")
label_user_y.pack()

entry_user_y = tk.Entry(root)
entry_user_y.pack()

btn_submit = tk.Button(root, text="Подтвердить", command=on_submit)
btn_submit.pack()

root.mainloop()